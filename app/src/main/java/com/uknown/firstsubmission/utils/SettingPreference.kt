package com.uknown.firstsubmission.utilsimport android.content.Contextimport androidx.datastore.core.DataStoreimport androidx.datastore.preferences.core.Preferencesimport androidx.datastore.preferences.core.booleanPreferencesKeyimport androidx.datastore.preferences.core.editimport androidx.datastore.preferences.preferencesDataStoreimport kotlinx.coroutines.flow.Flowimport kotlinx.coroutines.flow.mapval Context.datastore: DataStore<Preferences> by preferencesDataStore(name = "darktThemeSwitches")class SettingPreference private constructor(private val datastore: DataStore<Preferences>) {    companion object {        @Volatile        private var instance: SettingPreference? = null        fun getInstatnce(datastore: DataStore<Preferences>): SettingPreference? =            instance ?: synchronized(this) {                instance = SettingPreference(datastore)                instance            }    }    private val THEME_KEY = booleanPreferencesKey(name = "darktThemeSwitches")    fun getThemeSetting(): Flow<Boolean> {        return datastore.data.map {            it[THEME_KEY] ?: false        }    }    suspend fun saveThemeSetting(isDarkMode: Boolean) {        datastore.edit {            it[THEME_KEY] = isDarkMode        }    }}