package com.uknown.firstsubmission.ui.viewmodelimport androidx.lifecycle.MediatorLiveDataimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport com.uknown.firstsubmission.local.Userimport com.uknown.firstsubmission.network.response.UserResponseimport com.uknown.firstsubmission.repository.MainRepositoryimport com.uknown.firstsubmission.utils.Resourcesimport kotlinx.coroutines.launchclass MainViewModel(val mainRepository: MainRepository) : ViewModel() {    private val _data = MediatorLiveData<Resources<UserResponse>>()    val data = _data    init {        getAllData("Arif")    }    fun getAllData(username: String) = viewModelScope.launch {        data.value = mainRepository.getSpesificUserData(username).value    }    fun insertDataDao(user: User) = mainRepository.insertDataDao(user)    fun deleteDataDao(user: User) = mainRepository.deleteDataDao(user)    fun getDataUser(username: String) = mainRepository.getData(username)    fun getAllDataDao() = mainRepository.getAllDataDao()    fun getThemeSetting() = mainRepository.getThemeSetting()    fun setThemeSetting(isDarkMode: Boolean) = viewModelScope.launch {        mainRepository.setThemeSetting(isDarkMode)    }}